{"version":3,"sources":["container/CurrentExecution/styles.js","components/Card/index.js","components/Panel/index.js","Charts/PieChart.js","container/CurrentExecution/index.js"],"names":["PagePadding","styled","div","PanelBody","ChartWrapper","TableWrapper","GridWidth","width","bgColor","FlexItem","justifyCon","wrap","keyFrameExampleOne","keyframes","InfoCard","props","open","Width","Wrapper","IconWidget","Title","h4","Value","p","WidgetClicker","Card","this","title","value","Icon","className","icon","faArrowCircleRight","React","Component","PanelTile","PanelHead","cursor","Panel","children","onClick","id","PieChart","datasets","label","height","data","labels","legends","padding","PureComponent","CurrentExecution","changedOpenedPanel","text","state","openedPanel","setState","getCard","getTotalCardUI","FaRegChartBar","map","obj","index","getChartPanel","dataSets","backgroundColor","getGridUI","key","getInformationUI","getTableUI","getPanelChartUI","getHealthPanelUI","getTravelPanelUI","getLifePanelUI"],"mappings":"44EAEO,IAAMA,EAAcC,IAAOC,IAAV,KAsBXC,GAXYF,IAAOC,IAAV,KAKGD,IAAOC,IAAV,KAMGD,IAAOC,IAAV,MAQTE,GAJeH,IAAOC,IAAV,KAIGD,IAAOC,IAAV,MAgBZG,EAAeJ,IAAOC,IAAV,KAKZI,EAAYL,IAAOC,IAAV,KACX,gBAAGK,EAAH,EAAGA,MAAH,OAAeA,GAAgB,UACpB,gBAAGC,EAAH,EAAGA,QAAH,OAAiBA,GAAoB,UAO9CC,EAAWR,IAAOC,IAAV,KAEA,gBAAGQ,EAAH,EAAGA,WAAH,OAAoBA,GAAcA,KACxC,qBAAGC,MAAmB,UAG/BC,EAAqBC,YAAH,KAoBXC,GARgBb,IAAOC,IAAV,KACd,SAAAa,GAAK,OAAIA,EAAMC,KAAO,OAAS,MACvBJ,GAMIX,IAAOC,IAAV,M,u7CCnFrB,IAAMe,EAAQhB,IAAOC,IAAV,KAgBLgB,EAAUjB,IAAOC,IAAV,KAOS,gBAAGM,EAAH,EAAGA,QAAH,OAAiBA,GAAoB,uBAGrDW,EAAalB,IAAOC,IAAV,KAgBVkB,EAAQnB,IAAOoB,GAAV,KAOLC,EAAQrB,IAAOsB,EAAV,KAMLC,EAAgBvB,IAAOC,IAAV,KA4CJuB,E,iLA9BH,IAAD,EACiCC,KAAKX,MAArCY,EADD,EACCA,MAAOC,EADR,EACQA,MAAOpB,EADf,EACeA,QAASqB,EADxB,EACwBA,KAC/B,OACE,kBAACZ,EAAD,KACE,yBAAKa,UAAU,WACb,kBAACZ,EAAD,CAASV,QAASA,GAChB,kBAACW,EAAD,KACGU,GAAQ,kBAACA,EAAD,OAEX,6BACE,kBAACT,EAAD,KACGO,GAEH,kBAACL,EAAD,KACGM,IAGL,6BACE,kBAACJ,EAAD,mBAEE,kBAAC,IAAD,CAAiBO,KAAMC,e,GArBpBC,IAAMC,W,wQCrEzB,IAAMC,EAAYlC,IAAOC,IAAV,KAKTkC,EAAYnC,IAAOC,IAAV,KAIH,qBAAGmC,QAAuB,aAevBC,E,iLAXH,IAAD,EACkCZ,KAAKX,MAAtCY,EADD,EACCA,MAAOY,EADR,EACQA,SAAUC,EADlB,EACkBA,QAASC,EAD3B,EAC2BA,GAClC,OACE,kBAAC,EAAD,CAAWD,QAAS,kBAAMA,GAAWA,EAAQC,KAC3C,kBAAC,EAAD,CAAWJ,SAAQG,GAAyBb,GAC3CY,O,GANWN,IAAMC,W,SC+CXQ,G,iLAfH,IAAD,EAC4BhB,KAAKX,MAAhC4B,EADD,EACCA,SAAUC,EADX,EACWA,MAAOC,EADlB,EACkBA,OACrBC,EAAO,CACTC,OAAQH,EACRD,SAAUA,EACVK,QAAQ,CACNC,QAAS,KAGb,OACE,kBAAC,IAAD,CAAKH,KAAMA,EAAMD,OAAQA,Q,GAXRK,iBCtCjBC,G,YACJ,WAAYpC,GAAQ,IAAD,8BACjB,4CAAMA,KAMRqC,mBAAqB,SAACC,GAEjBA,IADqB,EAAKC,MAArBC,YAEN,EAAKC,SAAS,CACZD,YAAa,KAGf,EAAKC,SAAS,CACZD,YAAaF,KAfA,EAoBnBI,QAAU,SAAC9B,EAAOC,EAAOpB,EAASuB,GAChC,OACE,kBAAC,EAAD,CAAMJ,MAAOA,EAAOC,MAAOA,EAAOpB,QAASA,EAASqB,KAAME,KAtB3C,EA0BnB2B,eAAiB,WACf,IAAIZ,EAAO,CACT,CACEnB,MAAO,gBACPC,MAAO,IACPpB,QAAS,WAEX,CACEmB,MAAO,kBACPC,MAAO,KAET,CACED,MAAO,kBACPC,MAAO,IACPpB,QAAS,WAEX,CACEmB,MAAO,qBACPC,MAAO,eACPpB,QAAS,YACTuB,KAAM4B,MAGV,OACE,6BAEIb,EAAKc,KAAI,SAACC,EAAKC,GAAN,OACP,EAAKL,QAAQI,EAAIlC,MAAOkC,EAAIjC,MAAOiC,EAAIrD,QAASqD,EAAI9B,WArD3C,EA4DnBgC,cAAgB,SAACpC,EAAOmB,EAAMF,GAC5B,IACIoB,EAAW,CACb,CACElB,KAAMA,EACNmB,gBAJS,CAAC,UAAW,aAOzB,OACE,kBAAC,EAAD,CAAOtC,MAAOA,GACZ,kBAACxB,EAAD,KACE,kBAAC,GAAD,CAAOwC,SAAUqB,EAAUpB,MAAOA,EAAOC,OAAQ,SAvEtC,EA6EnBqB,UAAY,SAACJ,EAAOD,GAAR,OACV,kBAACvD,EAAD,CAAWC,MAAOsD,EAAItD,MAAOC,QAASqD,EAAIrD,QAAS2D,IAAKL,GACrDD,EAAIlC,QA/EU,EAmFnByC,iBAAmB,SAACN,EAAOD,GACzB,OACE,kBAAC/C,EAAD,CAAUqD,IAAKL,GACb,yBAAKhC,UAAU,cACb,6BACG+B,EAAIlC,QAGT,yBAAKG,UAAU,cACb,6BACG+B,EAAIjC,UA7FI,EAoGnByC,WAAa,WAmJX,OACE,kBAACjE,EAAD,KACE,kBAACC,EAAD,KACI,kBAACI,EAAD,CAAUC,WAAW,eAAeC,KAAM,GArBnC,CACb,CACEgB,MAAO,oBACPC,MAAO,uBAET,CACED,MAAO,kBACPC,MAAO,uBAET,CACED,MAAO,iBACPC,MAAO,4BAET,CACED,MAAO,yBACPC,MAAO,8BAOSgC,KAAI,SAACC,EAAKC,GAAN,OACZ,EAAKM,iBAAL,eAA8BN,GAASD,OAG3C,kBAACpD,EAAD,KA1JK,CACX,CACEF,MAAO,MACPoB,MAAO,GACPnB,QAAS,IAEX,CACED,MAAO,MACPoB,MAAO,aACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,aACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,cACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,kBACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,kBACPnB,QAAS,YA8HKoD,KAAI,SAACC,EAAKC,GAAN,OACV,EAAKI,UAAL,iBAAyBJ,GAASD,OAGtC,kBAACpD,EAAD,KA/HU,CAChB,CACEF,MAAO,MACPoB,MAAO,UACPnB,QAAS,aAEX,CACED,MAAO,MACPoB,MAAO,IACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,IACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,IACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,OACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,KACPnB,QAAS,YAmGUoD,KAAI,SAACC,EAAKC,GAAN,OACf,EAAKI,UAAL,iBAAyBJ,GAASD,OAGtC,kBAACpD,EAAD,KApGW,CACjB,CACEF,MAAO,MACPoB,MAAO,WACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,IACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,IACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,IACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,OACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,KACPnB,QAAS,YAwEWoD,KAAI,SAACC,EAAKC,GAAN,OAChB,EAAKI,UAAL,iBAAyBJ,GAASD,OAGtC,kBAACpD,EAAD,KAzEO,CACb,CACEF,MAAO,MACPoB,MAAO,aACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,IACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,IACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,IACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,OACPnB,QAAS,WAEX,CACED,MAAO,MACPoB,MAAO,KACPnB,QAAS,YA6COoD,KAAI,SAACC,EAAKC,GAAN,OACZ,EAAKI,UAAL,iBAAyBJ,GAASD,UAhR7B,EAwRnBS,gBAAkB,WAChB,IAkBQf,EAAgB,EAAKD,MAArBC,YAER,OACE,kBAAC,EAAD,CAAO5B,MAAM,2BAA2Ba,QAAS,EAAKY,mBAAoBX,GAAG,WAC1D,YAAhBc,GACC,kBAACnD,EAAD,KAvBU,CACd,CACEuB,MAAO,UACPmB,KAAM,CAAC,EAAG,KACVF,MAAO,CAAC,UAAW,cAErB,CACEjB,MAAO,WACPmB,KAAM,CAAC,KAAM,MACbF,MAAO,CAAC,aAAc,eAExB,CACEjB,MAAO,YACPmB,KAAM,CAAC,GAAI,IACXF,MAAO,CAAC,WAAY,cAULgB,KAAI,SAACC,EAAKC,GAAN,OACb,yBAAKK,IAAKL,EAAOhC,UAAU,cACxB,EAAKiC,cAAcF,EAAIlC,MAAOkC,EAAIf,KAAMe,EAAIjB,YAKpC,YAAhBW,GAA6B,EAAKc,eAxTtB,EA6TnBE,iBAAmB,WACjB,IAiBQhB,EAAgB,EAAKD,MAArBC,YAER,OACE,kBAAC,EAAD,CAAO5B,MAAM,iBAAiBa,QAAS,EAAKY,mBAAoBX,GAAG,UAChD,WAAhBc,GACC,kBAACnD,EAAD,KAtBU,CACd,CACEuB,MAAO,UACPmB,KAAM,CAAC,EAAG,KACVF,MAAO,CAAC,UAAW,cAErB,CACEjB,MAAO,WACPmB,KAAM,CAAC,KAAM,MACbF,MAAO,CAAC,aAAc,eAExB,CACEjB,MAAO,YACPmB,KAAM,CAAC,GAAI,IACXF,MAAO,CAAC,WAAY,cASLgB,KAAI,SAACC,EAAKC,GAAN,OACb,yBAAKK,IAAKL,EAAOhC,UAAU,cACxB,EAAKiC,cAAcF,EAAIlC,MAAOkC,EAAIf,KAAMe,EAAIjB,YAKpC,WAAhBW,GAA4B,EAAKc,eA5VrB,EAiWnBG,iBAAmB,WACjB,IAkBQjB,EAAgB,EAAKD,MAArBC,YAER,OACE,kBAAC,EAAD,CAAO5B,MAAM,iBAAiBa,QAAS,EAAKY,mBAAoBX,GAAG,UAChD,WAAhBc,GACC,kBAACnD,EAAD,KAvBU,CACd,CACEuB,MAAO,UACPmB,KAAM,CAAC,EAAG,KACVF,MAAO,CAAC,UAAW,cAErB,CACEjB,MAAO,WACPmB,KAAM,CAAC,KAAM,MACbF,MAAO,CAAC,aAAc,eAExB,CACEjB,MAAO,YACPmB,KAAM,CAAC,GAAI,IACXF,MAAO,CAAC,WAAY,cAULgB,KAAI,SAACC,EAAKC,GAAN,OACb,yBAAKK,IAAKL,EAAOhC,UAAU,cACxB,EAAKiC,cAAcF,EAAIlC,MAAOkC,EAAIf,KAAMe,EAAIjB,YAKpC,WAAhBW,GAA4B,EAAKc,eAjYrB,EAsYnBI,eAAiB,WACf,IAiBQlB,EAAgB,EAAKD,MAArBC,YAER,OACE,kBAAC,EAAD,CAAO5B,MAAM,eAAea,QAAS,EAAKY,mBAAoBX,GAAG,QAC9C,SAAhBc,GACC,kBAACnD,EAAD,KAtBU,CACd,CACEuB,MAAO,UACPmB,KAAM,CAAC,EAAG,KACVF,MAAO,CAAC,UAAW,cAErB,CACEjB,MAAO,WACPmB,KAAM,CAAC,KAAM,MACbF,MAAO,CAAC,aAAc,eAExB,CACEjB,MAAO,YACPmB,KAAM,CAAC,GAAI,IACXF,MAAO,CAAC,WAAY,cASLgB,KAAI,SAACC,EAAKC,GAAN,OACb,yBAAKK,IAAKL,EAAOhC,UAAU,cACxB,EAAKiC,cAAcF,EAAIlC,MAAOkC,EAAIf,KAAMe,EAAIjB,YAKpC,SAAhBW,GAA0B,EAAKc,eAnapC,EAAKf,MAAQ,CACXC,YAAa,WAHE,E,sEA2ajB,OACE,kBAACvD,EAAD,KACE,yBAAK8B,UAAU,SAAf,qBACCJ,KAAKgC,iBACLhC,KAAK4C,kBACN,yBAAKxC,UAAU,MACZJ,KAAK6C,oBAER,yBAAKzC,UAAU,MACZJ,KAAK8C,oBAER,yBAAK1C,UAAU,MACZJ,KAAK+C,uB,GAxbexC,IAAMC,WA+btBiB","file":"static/js/7.760cb128.chunk.js","sourcesContent":["import styled, {keyframes} from 'styled-components';\r\n\r\nexport const PagePadding = styled.div`\r\n  padding: 20px 45px 20px 10px;\r\n  .mt {\r\n    margin-top: 20px;\r\n  }\r\n  .title {\r\n    font-size: 24px;\r\n    margin: 0 0 15px 20px;\r\n  }\r\n`;\r\n\r\nexport const PanelTile = styled.div`\r\n  background: #fff;\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const PanelHead = styled.div`\r\n  background: #1d2226;\r\n  color: #fff;\r\n  padding: 10px 15px;\r\n`;\r\n\r\nexport const PanelBody = styled.div`\r\n  padding: 15px;\r\n`;\r\n\r\nexport const PanelWrapper = styled.div`\r\n  padding: 10px 45px 10px 10px;\r\n`;\r\n\r\nexport const ChartWrapper = styled.div`\r\n  padding: 20px 20px 20px 0px;\r\n  display: flex;\r\n  width: calc(100% - 20px);\r\n  flex-direction: row;\r\n  .chartWidth {\r\n    width: calc(100% / 3);\r\n  }\r\n  @media(max-width: 900px) {\r\n    flex-direction: column;\r\n    .chartWidth {\r\n      width:100%\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TableWrapper = styled.div`\r\n  margin-left: 20px;\r\n  width: calc(100% - 20px);\r\n`;\r\n\r\nexport const GridWidth = styled.div`\r\n  width: ${({ width }) => width ? width : '100%'};\r\n  background-color: ${({ bgColor }) => bgColor ? bgColor : '#fff'};\r\n  display: inline-block;\r\n  padding: 15px 0px;\r\n  text-align: center;\r\n  border: 0.5px solid white;\r\n`;\r\n\r\nexport const FlexItem = styled.div`\r\n  display: flex;\r\n  justify-content: ${({ justifyCon }) => justifyCon && justifyCon};\r\n  flex-wrap: ${({ wrap }) => wrap && 'wrap'};\r\n`;\r\n\r\nconst keyFrameExampleOne = keyframes`\r\n  0% {\r\n    height: 0%;\r\n  }\r\n  25% {\r\n    height: 25%; \r\n  }\r\n  100% {\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nexport const TransitionDiv = styled.div`\r\n  height: ${props => props.open ? \"100%\" : \"0\"};\r\n  animation-name: ${keyFrameExampleOne};\r\n  animation-duration: 4s;\r\n  animation-timing-function: linear\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const InfoCard = styled.div`\r\n  min-width: 200px;\r\n  margin: 10px 20px 30px;\r\n  max-width: 25%;\r\n  .card-title {\r\n    padding: 10px 0px;\r\n    background-color: #92d3de;\r\n    >div {\r\n      padding: 0px 5px;\r\n      text-align: center;\r\n    }\r\n  }\r\n  .card-value {\r\n    padding: 10px 0px;\r\n    border: 1px solid #92d3de;\r\n    > div {\r\n      padding: 0px 5px;\r\n      text-align: center;\r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowCircleRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Width = styled.div`\r\n  width: 25%;\r\n  display: inline-block;\r\n  .flexDiv {\r\n    margin-left: 20px;\r\n    width: calc(100% - 20px);\r\n    margin-bottom: 20px;\r\n  }\r\n  @media(max-width: 1150px) {\r\n    width: 50%; \r\n  }\r\n  @media(max-width: 700px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: calc(100% - 30px);\r\n  position: relative;\r\n  color: #fff;\r\n  padding: 15px;\r\n  -webkit-border-radius: 4px;\r\n  border-radius: 4px;\r\n  background-color: ${({ bgColor }) => bgColor ? bgColor : '#348fe2!important'};\r\n`;\r\n\r\nconst IconWidget = styled.div`\r\n  font-size: 42px;\r\n  height: 56px;\r\n  width: 56px;\r\n  text-align: center;\r\n  line-height: 56px;\r\n  color: rgba(0,0,0,.15);\r\n  position: absolute;\r\n  right: 15px;\r\n  top: 15px;\r\n  margin-left: 15px;\r\n  >svg {\r\n    font-size: 56px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h4`\r\n  font-size: 13px;\r\n  text-transform: uppercase;\r\n  margin: 5px 0;\r\n  color: rgba(255,255,255,.7);\r\n`;\r\n\r\nconst Value = styled.p`\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  margin: 0;\r\n`;\r\n\r\nconst WidgetClicker = styled.div`\r\n  display: block;\r\n  margin: 15px -15px -15px;\r\n  padding: 7px 15px;\r\n  background: rgba(0,0,0,.4);\r\n  text-align: right;\r\n  color: rgba(255,255,255,.7);\r\n  >svg {\r\n    margin-left: 5px;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nclass Card extends React.Component {\r\n  render() {\r\n    const { title, value, bgColor, Icon } = this.props;\r\n    return (\r\n      <Width>\r\n        <div className=\"flexDiv\">\r\n          <Wrapper bgColor={bgColor}>\r\n            <IconWidget>\r\n              {Icon && <Icon />}\r\n            </IconWidget>\r\n            <div>\r\n              <Title>\r\n                {title}\r\n              </Title>\r\n              <Value>\r\n                {value}\r\n              </Value>\r\n            </div>\r\n            <div>\r\n              <WidgetClicker>\r\n                View Detail\r\n                <FontAwesomeIcon icon={faArrowCircleRight} />\r\n            </WidgetClicker>\r\n            </div>\r\n          </Wrapper>\r\n        </div>\r\n      </Width>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst PanelTile = styled.div`\r\n  background: #fff;\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst PanelHead = styled.div`\r\n  background: #1d2226;\r\n  color: #fff;\r\n  padding: 10px 15px;\r\n  cursor: ${({ cursor }) => cursor && 'pointer'};\r\n`;\r\n\r\nclass Panel extends React.Component {\r\n  render() {\r\n    const { title, children, onClick, id } = this.props;\r\n    return (\r\n      <PanelTile onClick={() => onClick && onClick(id)} >\r\n        <PanelHead cursor={onClick ? true : false}>{title}</PanelHead>\r\n        {children}\r\n      </PanelTile>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Panel;","import React, { PureComponent } from 'react';\r\n// import {\r\n//   PieChart, Pie, Cell, ResponsiveContainer\r\n// } from 'recharts';\r\n\r\n// const RADIAN = Math.PI / 180;\r\n// const renderCustomizedLabel = ({\r\n//   cx, cy, midAngle, innerRadius, outerRadius, percent, index,\r\n// }) => {\r\n//   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n//   const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n//   const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n//   const value = (percent * 100).toFixed(0);\r\n//   return (\r\n//     <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n//       {value > 0 ? `${value}%` : ''}\r\n//     </text>\r\n//   );\r\n// };\r\n\r\n// export default class PieUI extends PureComponent {\r\n//   render() {\r\n//     const { data, colors } = this.props;\r\n//     return (\r\n//       <div style={{ width: '100%', height: 300 }}>\r\n//         <ResponsiveContainer>\r\n//           <PieChart>\r\n//             <Pie\r\n//               data={data ? data : []}\r\n//               labelLine={false}\r\n//               outerRadius={80}\r\n//               fill=\"#8884d8\"\r\n//               label={renderCustomizedLabel}\r\n//               dataKey=\"value\"\r\n//             >\r\n//               {\r\n//                 data.map((entry, index) => <Cell key={`cell-${index}`} fill={colors[index]} />)\r\n//               }\r\n//             </Pie>\r\n//           </PieChart>\r\n//         </ResponsiveContainer>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nclass PieChart extends PureComponent {\r\n  render() {\r\n    const { datasets, label, height }= this.props;\r\n    let data = {\r\n      labels: label,\r\n      datasets: datasets,\r\n      legends:{\r\n        padding: 20\r\n      }\r\n    }\r\n    return (\r\n      <Pie data={data} height={height}/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PieChart;","import React from 'react';\r\nimport { FaRegChartBar } from \"react-icons/fa\";\r\n\r\nimport { PagePadding, ChartWrapper, PanelBody, TableWrapper, GridWidth, FlexItem, InfoCard } from './styles';\r\n\r\nimport Card from '../../components/Card/index';\r\nimport Panel from '../../components/Panel';\r\nimport PieUI from '../../Charts/PieChart';\r\n\r\nclass CurrentExecution extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openedPanel: 'overall'\r\n    }\r\n  }\r\n\r\n  changedOpenedPanel = (text) => {\r\n    const { openedPanel } = this.state;\r\n    if(text === openedPanel) {\r\n      this.setState({\r\n        openedPanel: ''\r\n      })\r\n    } else {\r\n      this.setState({\r\n        openedPanel: text\r\n      })\r\n    }\r\n  }\r\n\r\n  getCard = (title, value, bgColor, icon) => {\r\n    return (\r\n      <Card title={title} value={value} bgColor={bgColor} Icon={icon}/>\r\n    )\r\n  }\r\n\r\n  getTotalCardUI = () => {\r\n    let data = [\r\n      {\r\n        title: \"Total Modules\",\r\n        value: \"3\",\r\n        bgColor: '#00acac'\r\n      },\r\n      {\r\n        title: \"Total Scenarios\",\r\n        value: \"3\"\r\n      },\r\n      {\r\n        title: \"Total Testcases\",\r\n        value: \"3\",\r\n        bgColor: '#a667e0'\r\n      },\r\n      {\r\n        title: \"Avg Execution Time\",\r\n        value: \"00 hr 33 min\",\r\n        bgColor: '#00000052',\r\n        icon: FaRegChartBar\r\n      }\r\n    ]\r\n    return (\r\n      <div>\r\n        {\r\n          data.map((obj, index) => (\r\n            this.getCard(obj.title, obj.value, obj.bgColor, obj.icon)\r\n          ))\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getChartPanel = (title, data, label) => {\r\n    let colors = ['#66c16a', '#ff5b57']\r\n    let dataSets = [\r\n      {\r\n        data: data,\r\n        backgroundColor: colors\r\n      }\r\n    ]\r\n    return (\r\n      <Panel title={title}>\r\n        <PanelBody>\r\n          <PieUI datasets={dataSets} label={label} height={200} />\r\n        </PanelBody>\r\n      </Panel>\r\n    )\r\n  }\r\n\r\n  getGridUI = (index, obj) => (\r\n    <GridWidth width={obj.width} bgColor={obj.bgColor} key={index}>\r\n      {obj.title}            \r\n    </GridWidth>\r\n  )\r\n\r\n  getInformationUI = (index, obj) => {\r\n    return(\r\n      <InfoCard key={index}>\r\n        <div className=\"card-title\">\r\n          <div>\r\n            {obj.title}\r\n          </div>\r\n        </div>\r\n        <div className=\"card-value\">\r\n          <div>\r\n            {obj.value}\r\n          </div>\r\n        </div>\r\n      </InfoCard>\r\n    )\r\n  }\r\n\r\n  getTableUI = () => {\r\n    let header = [\r\n      {\r\n        width: '15%',\r\n        title: '',\r\n        bgColor: ''\r\n      },\r\n      {\r\n        width: '15%',\r\n        title: 'Pass Count',\r\n        bgColor: '#ff5b57'\r\n      },\r\n      {\r\n        width: '15%',\r\n        title: 'Fail Count',\r\n        bgColor: '#66c16a'\r\n      },\r\n      {\r\n        width: '15%',\r\n        title: 'Total Count',\r\n        bgColor: '#92d3de'\r\n      },\r\n      {\r\n        width: '20%',\r\n        title: 'Pass Percentage',\r\n        bgColor: '#ff5b57'\r\n      },\r\n      {\r\n        width: '20%',\r\n        title: 'Fail Percentage',\r\n        bgColor: '#66c16a'\r\n      }\r\n    ];\r\n    let modulusData = [\r\n      {\r\n        width: '15%',\r\n        title: 'Modulus',\r\n        bgColor: '#ffff2de8'\r\n      },\r\n      {\r\n        width: '15%',\r\n        title: '1',\r\n        bgColor: '#ff5b57'\r\n      },\r\n      {\r\n        width: '15%',\r\n        title: '0',\r\n        bgColor: '#66c16a'\r\n      },\r\n      {\r\n        width: '15%',\r\n        title: '1',\r\n        bgColor: '#92d3de'\r\n      },\r\n      {\r\n        width: '20%',\r\n        title: '100%',\r\n        bgColor: '#ff5b57'\r\n      },\r\n      {\r\n        width: '20%',\r\n        title: '0%',\r\n        bgColor: '#66c16a'\r\n      }\r\n    ];\r\n    let scanarioData = [\r\n      {\r\n        width: '15%',\r\n        title: 'Scenario',\r\n        bgColor: '#92d3de'\r\n      },\r\n      {\r\n        width: '15%',\r\n        title: '1',\r\n        bgColor: '#ff5b57'\r\n      },\r\n      {\r\n        width: '15%',\r\n        title: '0',\r\n        bgColor: '#66c16a'\r\n      },\r\n      {\r\n        width: '15%',\r\n        title: '1',\r\n        bgColor: '#92d3de'\r\n      },\r\n      {\r\n        width: '20%',\r\n        title: '100%',\r\n        bgColor: '#ff5b57'\r\n      },\r\n      {\r\n        width: '20%',\r\n        title: '0%',\r\n        bgColor: '#66c16a'\r\n      }\r\n    ];\r\n    let testData = [\r\n      {\r\n        width: '15%',\r\n        title: 'Test Cases',\r\n        bgColor: '#c1bdbd'\r\n      },\r\n      {\r\n        width: '15%',\r\n        title: '1',\r\n        bgColor: '#ff5b57'\r\n      },\r\n      {\r\n        width: '15%',\r\n        title: '0',\r\n        bgColor: '#66c16a'\r\n      },\r\n      {\r\n        width: '15%',\r\n        title: '1',\r\n        bgColor: '#92d3de'\r\n      },\r\n      {\r\n        width: '20%',\r\n        title: '100%',\r\n        bgColor: '#ff5b57'\r\n      },\r\n      {\r\n        width: '20%',\r\n        title: '0%',\r\n        bgColor: '#66c16a'\r\n      }\r\n    ];\r\n    let InfoData = [\r\n      {\r\n        title: 'Start Date & Time',\r\n        value: '02/10/2019 17:32:00'\r\n      },\r\n      {\r\n        title: 'End Date & Time',\r\n        value: '02/11/2019 17:32:00'\r\n      },\r\n      {\r\n        title: 'Total Duration',\r\n        value: '00 hr 1 min  30 sec 0 ms'\r\n      },\r\n      {\r\n        title: 'Average Execution Time',\r\n        value: '00 hr 30 min  30 sec 0 ms'\r\n      }\r\n    ]\r\n    return(\r\n      <ChartWrapper>\r\n        <TableWrapper>\r\n            <FlexItem justifyCon='space-around' wrap={1}>\r\n              {InfoData.map((obj, index) => (\r\n                this.getInformationUI(`info-${index}`, obj)\r\n              ))}\r\n            </FlexItem>\r\n            <FlexItem >\r\n              {header.map((obj, index) => (\r\n                this.getGridUI(`header-${index}`, obj)\r\n              ))}\r\n            </FlexItem>\r\n            <FlexItem >\r\n              {modulusData.map((obj, index) => (\r\n                this.getGridUI(`header-${index}`, obj)\r\n              ))}\r\n            </FlexItem>\r\n            <FlexItem >\r\n              {scanarioData.map((obj, index) => (\r\n                this.getGridUI(`header-${index}`, obj)\r\n              ))}\r\n            </FlexItem>\r\n            <FlexItem >\r\n              {testData.map((obj, index) => (\r\n                this.getGridUI(`header-${index}`, obj)\r\n              ))}\r\n            </FlexItem>\r\n        </TableWrapper>\r\n      </ChartWrapper>\r\n    )\r\n  }\r\n\r\n  getPanelChartUI = () => {\r\n    let chartData = [\r\n      {\r\n        title: 'Modulus',\r\n        data: [0, 100],\r\n        label: ['0% pass', '100% fail']\r\n      },\r\n      {\r\n        title: 'Scanario',\r\n        data: [66.6, 33.3],\r\n        label: ['66.6% pass', '33.3% fail']\r\n      },\r\n      {\r\n        title: 'Testcases',\r\n        data: [80, 20],\r\n        label: ['80% pass', '20% fail']\r\n      }\r\n    ]\r\n\r\n    const { openedPanel } = this.state;\r\n\r\n    return (\r\n      <Panel title=\"Overall execution status\" onClick={this.changedOpenedPanel} id='overall'>\r\n        {openedPanel === 'overall' &&\r\n          <ChartWrapper >\r\n            {chartData.map((obj, index) => (\r\n              <div key={index} className=\"chartWidth\">\r\n                {this.getChartPanel(obj.title, obj.data, obj.label)}\r\n              </div>\r\n            ))}\r\n          </ChartWrapper>\r\n        }\r\n        {openedPanel === 'overall' && this.getTableUI()}\r\n      </Panel>\r\n    )\r\n  }\r\n\r\n  getHealthPanelUI = () => {\r\n    let chartData = [\r\n      {\r\n        title: 'Modulus',\r\n        data: [0, 100],\r\n        label: ['0% pass', '100% fail']\r\n      },\r\n      {\r\n        title: 'Scanario',\r\n        data: [66.6, 33.3],\r\n        label: ['66.6% pass', '33.3% fail']\r\n      },\r\n      {\r\n        title: 'Testcases',\r\n        data: [80, 20],\r\n        label: ['80% pass', '20% fail']\r\n      }\r\n    ]\r\n    const { openedPanel } = this.state;\r\n\r\n    return (\r\n      <Panel title=\"Module: Health\" onClick={this.changedOpenedPanel} id='health'>\r\n        {openedPanel === 'health' &&\r\n          <ChartWrapper>\r\n            {chartData.map((obj, index) => (\r\n              <div key={index} className=\"chartWidth\">\r\n                {this.getChartPanel(obj.title, obj.data, obj.label)}\r\n              </div>\r\n            ))}\r\n          </ChartWrapper>\r\n        }\r\n        {openedPanel === 'health' && this.getTableUI()}\r\n      </Panel>\r\n    )\r\n  }\r\n\r\n  getTravelPanelUI = () => {\r\n    let chartData = [\r\n      {\r\n        title: 'Modulus',\r\n        data: [0, 100],\r\n        label: ['0% pass', '100% fail']\r\n      },\r\n      {\r\n        title: 'Scanario',\r\n        data: [66.6, 33.3],\r\n        label: ['66.6% pass', '33.3% fail']\r\n      },\r\n      {\r\n        title: 'Testcases',\r\n        data: [80, 20],\r\n        label: ['80% pass', '20% fail']\r\n      }\r\n    ]\r\n\r\n    const { openedPanel } = this.state;\r\n\r\n    return (\r\n      <Panel title=\"Module: Travel\" onClick={this.changedOpenedPanel} id='travel'>\r\n        {openedPanel === 'travel' &&\r\n          <ChartWrapper>\r\n            {chartData.map((obj, index) => (\r\n              <div key={index} className=\"chartWidth\">\r\n                {this.getChartPanel(obj.title, obj.data, obj.label)}\r\n              </div>\r\n            ))}\r\n          </ChartWrapper>\r\n        }\r\n        {openedPanel === 'travel' && this.getTableUI()}\r\n      </Panel>\r\n    )\r\n  }\r\n\r\n  getLifePanelUI = () => {\r\n    let chartData = [\r\n      {\r\n        title: 'Modulus',\r\n        data: [0, 100],\r\n        label: ['0% pass', '100% fail']\r\n      },\r\n      {\r\n        title: 'Scanario',\r\n        data: [66.6, 33.3],\r\n        label: ['66.6% pass', '33.3% fail']\r\n      },\r\n      {\r\n        title: 'Testcases',\r\n        data: [80, 20],\r\n        label: ['80% pass', '20% fail']\r\n      }\r\n    ]\r\n    const { openedPanel } = this.state;\r\n\r\n    return (\r\n      <Panel title=\"Module: Life\" onClick={this.changedOpenedPanel} id='life'>\r\n        {openedPanel === 'life' &&\r\n          <ChartWrapper>\r\n            {chartData.map((obj, index) => (\r\n              <div key={index} className=\"chartWidth\">\r\n                {this.getChartPanel(obj.title, obj.data, obj.label)}\r\n              </div>\r\n            ))}\r\n          </ChartWrapper>\r\n        }\r\n        {openedPanel === 'life' && this.getTableUI()}\r\n      </Panel>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PagePadding>\r\n        <div className=\"title\">Curreny Execution</div>\r\n        {this.getTotalCardUI()}\r\n        {this.getPanelChartUI()}\r\n        <div className=\"mt\">\r\n          {this.getHealthPanelUI()}\r\n        </div>\r\n        <div className=\"mt\">\r\n          {this.getTravelPanelUI()}\r\n        </div>\r\n        <div className=\"mt\">\r\n          {this.getLifePanelUI()}\r\n        </div>\r\n      </PagePadding>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrentExecution;"],"sourceRoot":""}